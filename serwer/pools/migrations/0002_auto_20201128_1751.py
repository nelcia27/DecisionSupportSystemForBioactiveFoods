# Generated by Django 3.1.3 on 2020-11-28 16:51

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    dependencies = [
        ('pools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicIngredient',
            fields=[
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
                ('percentage', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='BasicIngredientBase',
            fields=[
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DetailedMetric',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number_of_repeat', models.PositiveIntegerField(default=1)),
                ('number_of_series', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalFactor',
            fields=[
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
                ('number_of_values', models.PositiveIntegerField(default=3)),
                ('unit', models.CharField(max_length=30)),
                ('values', models.CharField(max_length=150, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
                ('unit', models.CharField(max_length=30)),
                ('scale', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='SupplementBase',
            fields=[
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='experiment',
            name='public_view',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='Supplement',
            fields=[
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
                ('percentage', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('basicIngredientBase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pools.basicingredientbase')),
                ('supplement_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pools.supplementbase')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('externalFactor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pools.externalfactor')),
                ('supplement', models.ManyToManyField(to='pools.Supplement')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.FloatField()),
                ('number_of_measure', models.PositiveIntegerField()),
                ('number_of_serie', models.PositiveIntegerField()),
                ('detailed_metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pools.detailedmetric')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('grammage', models.PositiveIntegerField(default=100)),
                ('ingredients', models.ManyToManyField(to='pools.BasicIngredient')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
                ('description', models.CharField(max_length=1500)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pools.category')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pools.recipe')),
            ],
        ),
        migrations.AddField(
            model_name='detailedmetric',
            name='metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pools.metric'),
        ),
        migrations.AddField(
            model_name='detailedmetric',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pools.sample'),
        ),
        migrations.AddField(
            model_name='basicingredient',
            name='basicIngredientBase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pools.basicingredientbase'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='detailed_metrics',
            field=models.ManyToManyField(to='pools.DetailedMetric'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='product',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='pools.product'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='experiment',
            name='samples',
            field=models.ManyToManyField(to='pools.Sample'),
        ),
    ]
